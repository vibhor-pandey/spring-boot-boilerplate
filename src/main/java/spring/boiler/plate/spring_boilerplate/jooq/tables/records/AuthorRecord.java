/*
 * This file is generated by jOOQ.
 */
package spring.boiler.plate.spring_boilerplate.jooq.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import spring.boiler.plate.spring_boilerplate.jooq.tables.Author;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorRecord extends UpdatableRecordImpl<AuthorRecord> implements Record6<Integer, String, String, LocalDate, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.author.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.author.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.author.first_name</code>.
     */
    public void setFirstName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.author.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.author.last_name</code>.
     */
    public void setLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.author.last_name</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.author.birthday</code>.
     */
    public void setBirthday(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.author.birthday</code>.
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.author.country</code>.
     */
    public void setCountry(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.author.country</code>.
     */
    public String getCountry() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.author.writing_hrs_per_day</code>.
     */
    public void setWritingHrsPerDay(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.author.writing_hrs_per_day</code>.
     */
    public Integer getWritingHrsPerDay() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, LocalDate, String, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, LocalDate, String, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Author.AUTHOR.ID;
    }

    @Override
    public Field<String> field2() {
        return Author.AUTHOR.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Author.AUTHOR.LAST_NAME;
    }

    @Override
    public Field<LocalDate> field4() {
        return Author.AUTHOR.BIRTHDAY;
    }

    @Override
    public Field<String> field5() {
        return Author.AUTHOR.COUNTRY;
    }

    @Override
    public Field<Integer> field6() {
        return Author.AUTHOR.WRITING_HRS_PER_DAY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public LocalDate component4() {
        return getBirthday();
    }

    @Override
    public String component5() {
        return getCountry();
    }

    @Override
    public Integer component6() {
        return getWritingHrsPerDay();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public LocalDate value4() {
        return getBirthday();
    }

    @Override
    public String value5() {
        return getCountry();
    }

    @Override
    public Integer value6() {
        return getWritingHrsPerDay();
    }

    @Override
    public AuthorRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AuthorRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public AuthorRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public AuthorRecord value4(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public AuthorRecord value5(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public AuthorRecord value6(Integer value) {
        setWritingHrsPerDay(value);
        return this;
    }

    @Override
    public AuthorRecord values(Integer value1, String value2, String value3, LocalDate value4, String value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorRecord
     */
    public AuthorRecord() {
        super(Author.AUTHOR);
    }

    /**
     * Create a detached, initialised AuthorRecord
     */
    public AuthorRecord(Integer id, String firstName, String lastName, LocalDate birthday, String country, Integer writingHrsPerDay) {
        super(Author.AUTHOR);

        setId(id);
        setFirstName(firstName);
        setLastName(lastName);
        setBirthday(birthday);
        setCountry(country);
        setWritingHrsPerDay(writingHrsPerDay);
    }
}
